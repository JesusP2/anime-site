---
import Head from "@/components/head.astro";
import { LandingPage } from "@/components/landing/page";
import { getCarouselAnimes } from "@/lib/anime/queries";
import { getCarouselMangas } from "@/lib/manga/queries";

const currentSeasonSearch = new URLSearchParams([
  ["season", Astro.locals.currentSeason.season],
  ["year", Astro.locals.currentSeason.year.toString()],
  ["page", "1"],
]);
const allTimeFavoritesSearch = new URLSearchParams([
  ["orderBy", "score"],
  ["sort", "desc"],
  ["page", "1"],
]);
const popularThisSeasonSearch = new URLSearchParams([
  ["orderBy", "score"],
  ["sort", "desc"],
  ["season", Astro.locals.currentSeason.season],
  ["year", Astro.locals.currentSeason.year.toString()],
  ["page", "1"],
]);
const topMangasSearch = new URLSearchParams([
  ["searchType", "Manga"],
  ["orderBy", "score"],
  ["sort", "desc"],
  ["page", "1"],
]);
const [currentSeasonAnimes, allTimeFavoritesAnimes, popularThisSeasonAnimes, topMangas] = await Promise.all([
  getCarouselAnimes(currentSeasonSearch, 15),
  getCarouselAnimes(allTimeFavoritesSearch, 15),
  getCarouselAnimes(popularThisSeasonSearch, 15),
  getCarouselMangas(topMangasSearch, 15),
]);
const isDarkMode = Astro.cookies.get("theme")?.value === "dark";
---

<html lang="en" class={isDarkMode ? "dark" : ""}>
  <Head title={"Anisearch"} description={"description"} />
  <body class="overflow-x-hidden">
    <LandingPage
      isDarkMode={isDarkMode}
      currentSeasonAnimes={{
        data: currentSeasonAnimes,
        searchParams: currentSeasonSearch.toString(),
      }}
      }}
      popularThisSeasonAnimes={{
        data: popularThisSeasonAnimes,
        searchParams: popularThisSeasonSearch.toString(),
      }}
      }}
      topMangas={{
        data: topMangas,
        searchParams: topMangasSearch.toString(),
      }}
      user={Astro.locals.user}
      allTimeFavorites={{
        data: allTimeFavoritesAnimes,
        searchParams: allTimeFavoritesSearch.toString(),
      }}
      client:load
    />
  </body>
</html>
