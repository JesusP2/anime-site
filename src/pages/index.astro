---
import Head from "@/components/head.astro";
import { LandingPage } from "@/components/landing/page";
import PlanesNear from "@/components/planes-near.astro";
import PlanesFar from "@/components/planes-far.astro";
import { ThemeButton } from "@/components/theme-button/landing";
const isDarkMode = Astro.cookies.get("theme")?.value === "dark";
---

<html lang="en" class={isDarkMode ? "dark" : ""}>
  <Head title={"Anisearch"} description={"description"} />
  <body
    class="bg-[url('/landing/light/sky.png')] dark:bg-[url('/landing/night/sky.png')] bg-no-repeat bg-cover overflow-hidden h-screen relative"
  >
    <div class="texture"></div>
    <ThemeButton isDarkMode={isDarkMode} client:load />
    <div
      class="bg-[url('/landing/light/cloud2.png')] dark:bg-[url('/landing/night/cloud2.png')] bg-no-repeat bg-cover overflow-hidden absolute top-0 left-0 w-full h-full z-10 clouds"
    >
    </div>
    <div class="absolute inset-0 overflow-hidden pointer-events-none z-10">
      <PlanesFar />
    </div>
    <div
      class="bg-[url('/landing/light/cloud1.png')] dark:bg-[url('/landing/night/cloud1.png')] bg-no-repeat bg-cover overflow-hidden absolute top-0 left-0 w-full h-full z-10 clouds"
    >
    </div>
    <div
      class="bg-[url('/landing/light/bg2.png')] dark:bg-[url('/landing/night/bg2.png')] bg-no-repeat bg-cover overflow-hidden absolute top-0 left-0 w-full h-full z-20"
    >
    </div>
    <div class="absolute inset-0 overflow-hidden pointer-events-none z-30">
      <PlanesNear />
    </div>
    <div
      class="bg-[url('/landing/light/bg1.png')] dark:bg-[url('/landing/night/bg1.png')] bg-no-repeat bg-cover overflow-hidden absolute top-0 left-0 w-full h-full z-40"
    >
      <LandingPage isDarkMode={isDarkMode} client:load />
    </div>
    <script>
      // Select all elements with the 'clouds' class
      const clouds = document.querySelectorAll(".clouds");

      // Define keyframes for the first cloud layer (subtle vertical movement)
      // Animates from off-screen left (-100%) to off-screen right (100%)
      // Includes a slight up/down motion using translateY
      const cloudKeyframes1 = [
        { transform: 'translate(-100%, 0px)' }, // Start position
        { transform: 'translate(0%, 5px)', offset: 0.5 }, // Mid-point, slightly down
        { transform: 'translate(100%, 0px)' } // End position, back to original Y
      ];

      // Define timing for the first cloud layer (slower)
      const cloudTiming1 = {
        duration: 200_000, // 90 seconds for a full cycle
        iterations: Infinity, // Loop forever
        easing: 'linear' // Constant speed
      };

      clouds.forEach((cloud) => {
        cloud.animate(cloudKeyframes1, cloudTiming1);
      });
    </script>
  </body>
</html>
