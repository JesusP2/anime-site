---
import "@/styles/global.css";
import { actions, isInputError } from "astro:actions";
import { cn } from "@/lib/utils";
import { buttonVariants } from "@/components/ui/button";
import { labelVariants } from "@/components/ui/label";
import { inputVariants } from "@/components/ui/input";
import AuthLayout from "@/layout/auth.astro";
import AuthLink from '@/components/auth-link.astro'
import { Eye, EyeSlash } from '@phosphor-icons/react';
const result = Astro.getActionResult(actions.auth.signUp);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
const formError = isInputError(result?.error) ? null : result?.error?.message;
if (Astro.locals.user) {
  return Astro.redirect('/')
}
---

<AuthLayout title="Sign up">
  <h1 slot="card-title">Sign up</h1>
  <h1 slot="card-description">Get started by creating an account</h1>
  <Fragment slot="card-content">
    <section class="mb-4 flex flex-col gap-y-4">
      <button
        id="google-btn"
        class={cn(
          buttonVariants({ variant: "outline" }),
          "w-full flex gap-x-2",
        )}
      >
        <img src="/public/google.svg" />
        Login with Google
      </button>
    </section>
    <section class="relative py-4">
      <div class="absolute inset-0 flex items-center">
        <span class="w-full border-t" />
      </div>
      <div class="relative flex justify-center text-xs uppercase">
        <span
          class="bg-white px-2 text-gray-600 dark:bg-gray-950 dark:text-gray-400"
        >
          Or sign up via email
        </span>
      </div>
    </section>
    <form method="POST" action={actions.auth.signUp}>
      <section class="grid gap-4">
        <span class="text-sm text-red-500">{formError}</span>
        <div class="grid gap-2">
          <label class={labelVariants()} for="email">Email</label>
          <input
            transition:persist
            class={inputVariants()}
            id="email"
            name="email"
            placeholder="example@gmail.com"
            required
            class=""
          />
          <span class="text-sm text-red-500">{inputErrors.email?.join(',')}</span>
        </div>
        <div class="grid gap-2">
          <div class="flex items-center">
            <div class="flex items-center gap-x-1">
              <label class={labelVariants()} for="password">Password</label>
              <button class="eye-btn" type="button" class="hover:text-gray-600"
                ><Eye className="eye-line" size={17} />
                <EyeSlash className="eye-off-line hidden" size={17} />
              </button>
            </div>
          </div>
          <input
            transition:persist
            class={inputVariants()}
            id="password"
            name="password"
            type="password"
            required
          />
          <span class="text-sm text-red-500">{inputErrors.password?.join(',')}</span>
        </div>
        <button class={cn(buttonVariants({ variant: "default" }), "w-full")}>
          Sign up
        </button>
      </section>
    </form>
    <section class="mt-4 text-center text-sm">
      Don&apos;t have an account?{" "}
      <AuthLink href="/auth/signin">
        Login
      </AuthLink>
    </section>
  </Fragment>
</AuthLayout>
<script>
  import { authClient } from "@/lib/auth-client";
  const googleBtn = document.querySelector("#google-btn");
  googleBtn?.addEventListener("click", async () => {
    await authClient.signIn.social({
      provider: "google",
      callbackURL: "/",
    });
  });
  const eyeBtn = document.querySelector(".eye-btn");
  if (eyeBtn) {
    const eyeLineIcon = eyeBtn.querySelector(".eye-line");
    const eyeOffLineIcon = eyeBtn.querySelector(".eye-off-line");
    const passwordInput = document.querySelector<HTMLInputElement>('#password')
    eyeBtn?.addEventListener("click", () => {
      if (!eyeLineIcon || !eyeOffLineIcon || !passwordInput) return;
      eyeLineIcon.classList.toggle("hidden");
      eyeOffLineIcon.classList.toggle("hidden");
      passwordInput.type = passwordInput.type === 'password' ? 'text' : 'password';
    });
  }
</script>
