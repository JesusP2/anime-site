---
import MainLayout from "@/layout/main.astro";
import { AnimeCard } from "@/components/anime-card";
import { MainPagination } from "@/components/pagination";
import { SearchWithFilters } from "@/components/search";
import { animeFilters } from "@/lib/anime/filters";
import { getCurrentSeason, getAnimesCount } from "@/lib/anime/data-access";

const _currentPage = Astro.url.searchParams.get("page") || "1";
const currentPage = isNaN(parseInt(_currentPage || ""))
  ? 1
  : parseInt(_currentPage);
const { season, year } = Astro.locals.currentSeason;

const animesPerPage = 25;
const searchParams = new URLSearchParams(Astro.url.searchParams);
searchParams.set("season", season);
searchParams.set("year", year.toString());

const [animesCount] = await getAnimesCount(searchParams, animesPerPage);
const animeRecords = await getCurrentSeason(
  searchParams,
  animesPerPage,
);
---

<MainLayout title="title">
  <SearchWithFilters
    url={new URL(Astro.url)}
    options={animeFilters}
    client:load
  />
  <div class="grid auto-fill-grid gap-6 px-10 w-full mx-auto">
    {animeRecords.map((item) => <AnimeCard data={item} client:load />)}
  </div>
  <div class="flex justify-center my-6">
    <MainPagination
      url={new URL(Astro.url)}
      lastVisiblePage={Math.ceil((animesCount?.count ?? 0) / animesPerPage)}
      currentPage={currentPage}
      client:load
    />
  </div>
</MainLayout>
