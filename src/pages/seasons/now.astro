---
import MainLayout from "@/layout/main.astro";
import { LocalSeasonGrid } from "@/components/local-season-grid";
import { AnimeCard } from "@/components/anime-card";
import { Pagination } from "@/components/pagination";
import { SearchWithFilters } from "@/components/search";
import { animeFilters } from "@/lib/anime/filters";
import {
  getCurrentSeason,
  getCurrentSeasonCount,
} from "@/lib/anime/data-access";

const _currentPage = Astro.url.searchParams.get("page") || "1";
const currentPage = isNaN(parseInt(_currentPage || ""))
  ? 1
  : parseInt(_currentPage);
const { season, year } = Astro.locals.currentSeason;

const animesPerPage = 25;
const searchParams = new URLSearchParams(Astro.url.searchParams);
searchParams.set("season", season);
searchParams.set("year", year.toString());
const [animesCount, animeRecords] = await Promise.all([
  getCurrentSeasonCount(searchParams, animesPerPage),
  getCurrentSeason(searchParams, animesPerPage),
]);
---

<MainLayout title="title">
  <SearchWithFilters
    url={new URL(Astro.url)}
    options={animeFilters}
    client:load
  />
  <LocalSeasonGrid
    records={animeRecords.isOk() ? animeRecords.value : []}
    user={Astro.locals.user}
    client:load
  />
  <div class="flex justify-center my-6">
    <Pagination
      url={new URL(Astro.url)}
      lastVisiblePage={Math.ceil(
        (animesCount.isOk() ? animesCount.value : 1) / animesPerPage,
      )}
      currentPage={currentPage}
      client:load
    />
  </div>
  <script></script>
</MainLayout>
