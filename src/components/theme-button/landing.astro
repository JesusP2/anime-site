---
import { landingThemeButtonId } from "@/lib/constants";
---

<div
  class="flex flex-col justify-center absolute top-0 left-[calc(50%-80px)] size-40"
>
  <input
    type="checkbox"
    name={landingThemeButtonId}
    id={landingThemeButtonId}
    class="peer sr-only z-50"
  />
  <label
    class="absolute top-0 size-40 z-50 cursor-pointer"
    id="theme-label"
    for={landingThemeButtonId}></label>

  <div
    class="bg-[url('/sun.avif')] bg-cover bg-no-repeat absolute top-0 size-40 z-10 dark:opacity-0 dark:invisible transition-opacity duration-300"
    style={{
      "view-transition-name": "theme-icon-sun",
    }}
    id="theme-icon-sun"
  >
  </div>
  <div
    class="bg-[url('/moon.avif')] bg-cover bg-no-repeat absolute top-0 size-40 z-10 opacity-0 invisible dark:opacity-100 dark:visible transition-opacity duration-300"
    style={{
      "view-transition-name": "theme-icon-moon",
    }}
    id="theme-icon-moon"
  >
  </div>
</div>

<script>
  import { toggleTheme } from "./landing-utils";
  import { landingThemeButtonId } from "@/lib/constants";

  function runEventListeners() {
    const $label = document.querySelector<HTMLLabelElement>("#theme-label");
    const $input = document.querySelector<HTMLInputElement>(
      `#${landingThemeButtonId}`,
    );
    const $iconSun = document.querySelector<HTMLDivElement>("#theme-icon-sun");
    const $iconMoon =
      document.querySelector<HTMLDivElement>("#theme-icon-moon");
    const isDarkMode = document.cookie.includes("theme=dark");

    function cb(isDarkMode: boolean) {
      $label?.setAttribute(
        "aria-label",
        `Switch to ${isDarkMode ? "light" : "dark"} mode`,
      );
      $iconSun?.setAttribute("aria-hidden", isDarkMode.toString());
      $iconMoon?.setAttribute("aria-hidden", (!isDarkMode).toString());
    }
    if ($input) {
      $input.checked = isDarkMode;
      cb(isDarkMode);
    }

    $input?.addEventListener("change", (e) => {
      toggleTheme(e.target?.checked, $label, cb);
    });
  }
  runEventListeners();
  document.addEventListener("astro:after-swap", runEventListeners);
</script>
