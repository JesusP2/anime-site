---
interface Props {
  isDarkMode: boolean;
}

const { isDarkMode } = Astro.props;
---

<div
  class="flex flex-col justify-center absolute top-0 left-[calc(50%-80px)] size-40"
>
  <input
    type="checkbox"
    name="theme"
    id="theme"
    class="peer sr-only z-50"
    checked={isDarkMode}
  />
  <label
    class="absolute top-0 size-40 z-50 cursor-pointer"
    for="theme"
    aria-label={`Switch to ${isDarkMode ? "light" : "dark"} mode`}></label>

  <div
    class="bg-[url('/sun.avif')] bg-cover bg-no-repeat absolute top-0 size-40 z-10 dark:opacity-0 dark:invisible transition-opacity duration-300"
    style={{
      "view-transition-name": "theme-icon-sun",
    }}
    aria-hidden={isDarkMode}
  >
  </div>
  <div
    class="bg-[url('/moon.avif')] bg-cover bg-no-repeat absolute top-0 size-40 z-10 opacity-0 invisible dark:opacity-100 dark:visible transition-opacity duration-300"
    style={{
      "view-transition-name": "theme-icon-moon",
    }}
    aria-hidden={!isDarkMode}
  >
  </div>
</div>
<script>
  import { toggleTheme } from "./landing-utils";
  const $label = document.querySelector<HTMLLabelElement>("label");
  const $input = document.querySelector<HTMLInputElement>("input");
  const isDarkMode = document.cookie.includes("theme=dark");
  if ($input) {
    $input.checked = isDarkMode;
  }

  function cb(isDarkMode: boolean) {
    $label?.setAttribute(
      "aria-label",
      `Switch to ${isDarkMode ? "light" : "dark"} mode`,
    );
  }
  $input?.addEventListener("change", (e) => {
    toggleTheme(e.target?.checked, $label, cb);
  });
</script>
