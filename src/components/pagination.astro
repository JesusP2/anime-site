---
import clsx from 'clsx';
interface Props {
  currentPage: number;
  lastPage: number;
  url: URL;
}

const { lastPage, currentPage, url } = Astro.props;
const lowerBound = currentPage - 2 < 0 ? 0 : currentPage - 2;
const upperBound = lastPage - (currentPage + 1) < 0 ? 0 : lastPage - (currentPage + 1);
let tabs: (string | number)[] = Array(lastPage)
  .fill(0)
  .map((_, idx) => idx + 1);

if (upperBound >= 3 && lastPage > 7) {
  tabs.splice(5, lastPage - 6, '...');
}
if (lowerBound >= 3 && lastPage > 7) {
  if (tabs.includes('...')) {
    tabs.splice(1, 4, '...');
  } else if (lastPage === 9) {
    tabs.splice(1, 3, '...');
  } else if (lastPage === 8) {
    tabs.splice(1, 2, '...');
  } else {
    tabs.splice(1, lastPage - 6, '...');
  }
}
if (tabs.length === 4 && tabs.includes('...')) {
  tabs.splice(2, 0, currentPage - 1, currentPage, currentPage + 1);
}
---

<div class="flex text-black space-x-2">
  {
    tabs.map((tab) => {
      const tabUrl = new URL(url);
      tabUrl.searchParams.set('page', tab.toString());
      return (
        <a
          href={tabUrl.toString()}
          class={clsx(
            'py-[5px] cursor-pointer px-3 rounded-md border-md border border-neutral-200 duration-300 font-inter',
            tab === currentPage
              ? 'bg-blue-900 hover:bg-blue-700 text-white border-0 font-semibold'
              : 'hover:bg-neutral-50 hover:border-neutral-700',
          )}
        >
          {tab}
        </a>
      );
    })
  }
</div>

